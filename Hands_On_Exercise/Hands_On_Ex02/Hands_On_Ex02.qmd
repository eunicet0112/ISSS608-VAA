---
2 title: "Beyond ggplot2 Fundamentals"

date: "January 17, 2024"
date modified: last-modified
execute:
  eval: true
  echo: true
  warning: false
---

## 2.1 Overview

This chapter introduces several ggplot2 extensions for creating more elegant and effective statistical graphics. Specifically, the following will be explained:

-   Controlling the placement of annotation on a graph by using functions provided in `ggrepel` package,

-   Creating professional publication quality figures by using functions provided in `ggthemes` and `hrbrthemes` packages, and

-   Plotting composite figures by combining ggplot2 graphs using `patchwork` package.

## 2.2 Getting Started

### 2.2.1 Installing and loading required libraries

Four R packages will be used: - `ggrepel`: provides geoms for ggplot2 to repel overlapping text labels - `ggthemes`: provides some extra themes, geoms and scales for ggplot2 - `hrbrthemes`: provides typography-centric themes and theme components for ggplot2 - `patchwork`: prepares composite figures creating using ggplot2

The code chunk below will be used to check if these packages have been installed and will load them onto the working R environment.

```{r}
pacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)
```

### 2.2.2 Importing data

For the purpose of this exercise, a data file called *Exam_data* will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in csv file format.

The code chunk below imports exam_data.csv into R environment by using [read_csv()](https://readr.tidyverse.org/reference/read_delim.html) function of [readr](https://readr.tidyverse.org/) package. **readr** is one of the tidyverse package.

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

There are a total of seven attributes in the *exam_data* tibble data frame. Four of them are categorical data tyle and the other three are in continuous data tyle. - The categorical attributes are: ID, CLASS, GENDER and RACE. - The continuous attributes are: MATHS, ENGLISH and SCIENCE.

### 2.3 Beying ggplot2 Annotation: ggrepel

One of the challenge of plotting statistical graph is annotation, especially with large number of data points.

::: panel-tabset
## Plot

```{r}
#| echo: FALSE
plot <- 
  ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

print(plot)
```

## Code

```{r}
#| eval: false
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

[`ggrepel`](https://ggrepel.slowkow.com/) is an extension of **ggplot2** package to provide `geoms` for **ggplot2** to repel overlapping text as in out example above. We simply replace `geom_text()` with [`geom_text_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html) and `geom_label()` with [`geom_label_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html).

::: panel-tabset
## Plot

```{r}
#| echo: FALSE
plot <-
  ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")

print(plot)
```

## Code

```{r}
#| eval: FALSE
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```
:::

## 2.4 Beyond ggplot2 Themes

ggplot2 comes with [eight](https://ggplot2.tidyverse.org/reference/ggtheme.html) built-in themes, namely `theme_gray()`, `theme_bw()`, `theme_classic()`, `theme_dark()`, `theme_light()`, `theme_linedraw()`, `theme_minimal()`, and `theme_void()`.

::: panel-tabset
## Plot

```{r}
#| echo: FALSE
plot <- 
  ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores") 

print(plot)
```

## Code

```{r}
#| eval: FALSE
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores") 
```
:::

### 2.4.1 Working with `ggtheme` Package

[**`ggthemes`**](https://cran.r-project.org/web/packages/ggthemes/) provides [ggplot2 themes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) that replicate the look of plots by Edward Tufte, Stephen Few, [Fivethirtyeight](https://abcnews.go.com/538), [The Economist](https://www.economist.com/graphic-detail), Stata, Excel and [The Wall Street Journal](https://www.pinterest.com/wsjgraphics/wsj-graphics/), among others.

In the example below, *The Economist* theme was used.

::: panel-tabset
## Plot

```{r}
#| echo: FALSE
plot <- 
  ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_economist()

print(plot)
```

## Code

```{r}
#| eval: FALSE
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_economist()
```
:::

### 2.4.2 Working with `hrbrthemes` Package

[`hrbrthemes`](https://cinc.rud.is/web/packages/hrbrthemes/) package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

::: panel-tabset
## Plot

```{r}
#| echo: FALSE
plot <- 
  ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()

print(plot)
```

## Code

```{r}
#| eval: FALSE

ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```
:::

The second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used. Consult [this vignette](https://cran.r-project.org/web/packages/hrbrthemes/vignettes/why_hrbrthemes.html) to learn more.

::: panel-tabset
## Plot

```{r}
#| echo: FALSE
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")
```

## Code

```{r}
#| eval: FALSE
ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")
```
:::

::: callout-tip
## What can we learn from the code chunk above?

-   `axis_title_size` argument is used to increase the font size of the axis title to 18,

-   `base_size` argument is used to increase the default axis label to 15, and

-   `grid` argument is used to remove the x-axis grid lines.
:::

## 2.5 Beyond Single Graph

It is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions with functions to compose figures with multiple graphs.

First, three statistical graphics are created using the code chunk below.

::: panel-tabset
## Code 1

```{r}
p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")
```

## Plot 1

```{r}
print(p1)
```

## Code 2

```{r}
p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")
```

## Plot 2

```{r}
print(p2)
```

## Code 3

```{r}
p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

## Plot 3

```{r}
print(p3)
```
:::

### 2.5.1 Creating Composite Graphics using `patchwork`

[`patchwork`](https://patchwork.data-imaginist.com/) is a ggplot2 extension specifically designed for combining separate ggplot2 graphs into a single figure.

The `patchwork` package has a simple syntax to create layouts easily. Here's the general syntax that combines: - Two-Column Layout using the plus sign + - Subgroup Plot using parenthesis () - Two-Row Layout using division sign /

### 2.5.2 Combining Two ggplot2 Graphs

Figure in the tabset below shows a composite of two histograms created using patchwork. Note how simple the syntax used to create the plot!

::: panel-tabset
## Plot

```{r}
#| echo: FALSE
print(p1+p2)
```

## Code

```{r}
#| eval: FALSE
p1 + p2
```
:::

### 2.5.3 Combining Three ggplot2 Graphs

We can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:

-   “\|” operator to stack two ggplot2 graphs,
-   “/” operator to place the plots beside each other,
-   “()” operator the define the sequence of the plotting.

::: panel-tabset
## Plot

```{r}
#| echo: FALSE
print((p1 / p2) | p3)
```

## Code

```{r}
#| eval: FALSE
(p1 / p2) | p3
```
:::

To learn more, refer to [Plot Assembly](https://patchwork.data-imaginist.com/articles/guides/assembly.html).

### 2.5.4 Creating Composite Figures with Tags

In order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown below.

::: panel-tabset
## Plot

```{r}
#| echo: FALSE
plot <- 
  ((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')

print(plot)
```

## Code

```{r}
#| eval: FALSE
((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')

```
:::

### 2.5.5 Creating Figure with Insert

Beside providing functions to place plots next to each other based on the provided layout. With [inset_element()](https://patchwork.data-imaginist.com/reference/inset_element.html) of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.

::: panel-tabset
## Plot

```{r}
#| echo: FALSE
plot <- 
  p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)
print(plot)
```

## Code

```{r}
#| eval: FALSE
p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)
```
:::

### 2.5.6 Creating Composite Figure using patchwork and ggtheme

Figure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.

::: panel-tabset
## Plot

```{r}
#| echo: FALSE
patchwork <- (p1 / p2) | p3
patchwork & theme_economist()
```

## Code

```{r}
#| eval: FALSE
patchwork <- (p1 / p2) | p3
patchwork & theme_economist()
```
:::
