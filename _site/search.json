[
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html",
    "href": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html",
    "title": "3 Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "This exercise details how to create interactive data visualisation by using functions provided by ggiraph and plotlyr packages."
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#learning-outcome",
    "href": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#learning-outcome",
    "title": "3 Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "This exercise details how to create interactive data visualisation by using functions provided by ggiraph and plotlyr packages."
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#getting-started",
    "href": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#getting-started",
    "title": "3 Programming Interactive Data Visualisation with R",
    "section": "2 Getting Started",
    "text": "2 Getting Started\nFirst, write a code chunk to check, install and launch the following R packages:\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that create interactive table on html page.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\nThe code chunk below will be used to accomplish the task.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#importing-data",
    "href": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#importing-data",
    "title": "3 Programming Interactive Data Visualisation with R",
    "section": "3 Importing Data",
    "text": "3 Importing Data\nIn this section, Exam_data.csv provided will be used. Using read_csv() of readr package, import Exam_data.csv into R.\nThe code chunk below read_csv() of readr package is used to import Exam_data.csv data file into R and save it as an tibble data frame called exam_data.\n\nexam_data &lt;- read_csv(\"Data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#interactive-data-visualisation---ggiraph-methods",
    "href": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#interactive-data-visualisation---ggiraph-methods",
    "title": "3 Programming Interactive Data Visualisation with R",
    "section": "4 Interactive Data Visualisation - ggiraph methods",
    "text": "4 Interactive Data Visualisation - ggiraph methods\nggiraph is an htmlwidget and a ggplot2 extension. It allows ggplot graphics to be interactive.\nInteractive is made with ggplot geometries that can understand three arguments:\n\nTooltip: a column of data-sets that contain tooltips to be displayed when the mouse is over elements.\nOnclick: a column of data-sets that contain a JavaScript function to be executed when elements are clicked.\nData_id: a column of data-sets that contain an id to be associated with elements.\n\nIf it used within a shiny application, elements associated with an id (data_id) can be selected and manipulated on client and server sides. Refer to this article for more detail explanation.\n\n4.1 Tooltip effect with tooltip aesthetic\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, an ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\nNotice that two steps are involved. First, an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page.\nBy hovering the mouse pointer on an data point of interest, the student’s ID will be displayed.\n\n\n4.2 Interactivity\n\n4.2.1 Displaying multiple information on tooltip\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7.\nBy hovering the mouse pointer on an data point of interest, the student’s ID and Class will be displayed.\n\n\n4.2.2 Customising Tooltip Style\nCode chunk below uses opts_tooltip() of ggiraph to customize tooltip rendering by add css declarations.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)\n\n\n\n\n\nNotice that the background colour of the tooltip is black and the font colour is white and bold.\n\nRefer to Customizing girafe objects to learn more about how to customise ggiraph objects.\n\n\n\n4.2.3 Displaying statistics on tooltip\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n4.2.4 Hover effect with data_id aesthetic\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote that the default value of the hover css is hover_css = “fill:orange;”.\n\n\n4.2.5 Styling hover effect\nIn the code chunk below, css codes are used to change the highlighting effect.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over.\nNote: Different from previous example, in this example the ccs customisation request are encoded directly.\n\n\n4.2.6 Combining tooltip and hover effect\nThere are time that we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\nInteractivity: Elements associated with a data_id (i.e CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.\n\n\n4.2.7 Click effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                         \n\n\n\n\n\nInteractivity: Web document link with a data object will be displayed on the web browser upon mouse click.\n\n\n\n\n\n\nWarning\n\n\n\nNote that click actions must be a string column in the dataset containing valid javascript instructions.\n\n\n\n\n4.2.8 Coordinated Multiple Views with ggiraph\nIn order to build a coordinated multiple views, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\nNotice that when a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point."
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#interactive-data-visualisation---plotly-methods",
    "href": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#interactive-data-visualisation---plotly-methods",
    "title": "3 Programming Interactive Data Visualisation with R",
    "section": "5 Interactive Data Visualisation - plotly methods",
    "text": "5 Interactive Data Visualisation - plotly methods\nPlotly’s R graphing library create interactive web graphics from ggplot2 graphs and/or a custom interface to the (MIT-licensed) JavaScript library plotly.js inspired by the grammar of graphics. Different from other plotly platform, plot.R is free and open source.\n\nThere are two ways to create interactive graph by using plotly, they are:\n\nby using plot_ly(), and\nby using ggplotly()\n\n\n5.1 Creating an interactive scatter plot: plot_ly() method\nThe tabset below shows an example a basic interactive plot created by using plot_ly().\n\nPlotCode Chunk\n\n\n\n\nCode\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n5.2 Working with visual variable: plot_ly() method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nPlotCode Chunk\n\n\n\n\nCode\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\nInteractive: click on the colour symbol at the legend\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\n\n\n\n\n\n5.3 Creating an interactive scatter plot: ggplotly() method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\nPlotCode Chunk\n\n\n\n\nCode\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\nNotice that the only extra line you need to include in the code chunk is ggplotly().\n\n\n\n\n\n5.4 Coordinated Multiple Views with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\ntwo scatterplots will be created by using ggplot2 functions.\nlastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nPlotCode Chunk\n\n\n\n\nCode\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\nClick on a data point of one of the scatterplot and see how the corresponding point on the other scatterplot is selected.\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\nThing to learn from the code chunk:\n\nhighlight_key() simply creates an object of class crosstalk::SharedData.\nVisit this link to learn more about crosstalk"
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#interactive-data-visualisation---crosstalk-methods",
    "href": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#interactive-data-visualisation---crosstalk-methods",
    "title": "3 Programming Interactive Data Visualisation with R",
    "section": "6 Interactive Data Visualisation - crosstalk methods",
    "text": "6 Interactive Data Visualisation - crosstalk methods\nCrosstalk is an add-on to the htmlwidgets package. It extends htmlwidgets with a set of classes, functions, and conventions for implementing cross-widget interactions (currently, linked brushing and filtering).\n\n6.1 Interactive Data Table: DT Package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\n6.2 Linked Brushing\n\nPlotCode Chunk\n\n\n\n\nCode\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode chunk below is used to implement the coordinated brushing shown above.\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\nThings to learn from the code chunk:\n\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!."
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#reference",
    "href": "Hands_On_Exercise/Hands_On_Ex03A/Hands_On_Ex03A.html#reference",
    "title": "3 Programming Interactive Data Visualisation with R",
    "section": "7 Reference",
    "text": "7 Reference\n\n7.1 ggigraph\nThis link provides online version of the reference guide and several useful articles. Use this link to download the pdf version of the reference guide.\n\nHow to Plot With Ggiraph\nInteractive map of France with ggiraph\nCustom interactive sunbursts with ggplot in R\nThis link provides code example on how ggiraph is used to interactive graphs for Swiss Olympians - the solo specialists.\n\n\n\n7.2 plotly for R\n\nGetting Started with Plotly in R\nA collection of plotly R graphs are available via this link.\nCarson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link\nPlotly R Figure Reference provides a comprehensive discussion of each visual representations.\nPlotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API.\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03B/In_Class_Ex03B.html",
    "href": "Hands_On_Exercise/Hands_On_Ex03B/In_Class_Ex03B.html",
    "title": "Programming Animated Data Graphics with R",
    "section": "",
    "text": "When telling a visually-driven data story, animated graphics tends to attract the interest of the audience and make deeper impression than static graphics. In this hands-on exercise, you will learn how to create animated data visualisation by using gganimate and plotly r packages. At the same time, you will also learn how to (i) reshape data by using tidyr package, and (ii) process, wrangle and transform data by using dplyr package.\n\n\nWhen creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot when conveying motion, which is built using some relevant subset of the aggregate data. The subset drives the flow of the animation when stitched back together.\n\n\n\n\nBefore we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning.\n\n\n\n\n\n\n\nTip\n\n\n\nBefore you start making animated graphs, you should first ask yourself: Does it makes sense to go through the effort? If you are conducting an exploratory data analysis, a animated graphic may not be worth the time investment. However, if you are giving a presentation, a few well-placed animated graphics can help an audience connect with your topic remarkably better than static counterparts."
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03B/In_Class_Ex03B.html#overview",
    "href": "Hands_On_Exercise/Hands_On_Ex03B/In_Class_Ex03B.html#overview",
    "title": "Programming Animated Data Graphics with R",
    "section": "",
    "text": "When telling a visually-driven data story, animated graphics tends to attract the interest of the audience and make deeper impression than static graphics. In this hands-on exercise, you will learn how to create animated data visualisation by using gganimate and plotly r packages. At the same time, you will also learn how to (i) reshape data by using tidyr package, and (ii) process, wrangle and transform data by using dplyr package.\n\n\nWhen creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot when conveying motion, which is built using some relevant subset of the aggregate data. The subset drives the flow of the animation when stitched back together.\n\n\n\n\nBefore we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning.\n\n\n\n\n\n\n\nTip\n\n\n\nBefore you start making animated graphs, you should first ask yourself: Does it makes sense to go through the effort? If you are conducting an exploratory data analysis, a animated graphic may not be worth the time investment. However, if you are giving a presentation, a few well-placed animated graphics can help an audience connect with your topic remarkably better than static counterparts."
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03B/In_Class_Ex03B.html#getting-started",
    "href": "Hands_On_Exercise/Hands_On_Ex03B/In_Class_Ex03B.html#getting-started",
    "title": "Programming Animated Data Graphics with R",
    "section": "2 Getting Started",
    "text": "2 Getting Started\n\n2.1 Loading the R Packages\nFirst, write a code chunk to check, install and load the following R packages:\n\nplotly, R library for plotting interactive statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\n\n2.2 Importing the Data\nIn this hands-on exercise, the Data worksheet from GlobalPopulation Excel workbook will be used.\nWrite a code chunk to import Data worksheet from GlobalPopulation Excel workbook by using appropriate R package from tidyverse family.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"Data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\n\n\n\n\n\nLearning Points\n\n\n\n\nread_xls() of readxl package is used to import the Excel worksheet.\nmutate_each_() of dplyr package is used to convert all character data type into factor.\nmutate of dplyr package is used to convert data values of Year field into integer.\n\n\n\nUnfortunately, mutate_each_() was deprecated in dplyr 0.7.0. and funs() was deprecated in dplyr 0.8.0. In view of this, we will re-write the code by using mutate_at() as shown in the code chunk below.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"Data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\nInstead of using mutate_at(), across() can be used to derive the same outputs.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"Data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03B/In_Class_Ex03B.html#animated-data-visualisation-gganimate-methods",
    "href": "Hands_On_Exercise/Hands_On_Ex03B/In_Class_Ex03B.html#animated-data-visualisation-gganimate-methods",
    "title": "Programming Animated Data Graphics with R",
    "section": "3 Animated Data Visualisation: gganimate methods",
    "text": "3 Animated Data Visualisation: gganimate methods\ngganimate extends the grammar of graphics as implemented by ggplot2 to include the description of animation. It does this by providing a range of new grammar classes that can be added to the plot object in order to customise how it should change with time.\n\ntransition_*() defines how the data should be spread out and how it relates to itself across time.\nview_*() defines how the positional scales should change along the animation.\nshadow_*() defines how data from other points in time should be presented in the given point in time.\nenter_*()/exit_*() defines how new data should appear and how old data should disappear during the course of the animation.\nease_aes() defines how different aesthetics should be eased during transitions.\n\n\n3.1 Building a static population bubble plot\nIn the code chunk below, the basic ggplot2 functions are used to create a static bubble plot.\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n3.2 Building the animated bubble plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year).\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03B/In_Class_Ex03B.html#animated-data-visualisation-plotly",
    "href": "Hands_On_Exercise/Hands_On_Ex03B/In_Class_Ex03B.html#animated-data-visualisation-plotly",
    "title": "Programming Animated Data Graphics with R",
    "section": "4 Animated Data Visualisation: plotly",
    "text": "4 Animated Data Visualisation: plotly\nIn Plotly R package, both ggplotly() and plot_ly() support key frame animations through the frame argument/aesthetic. They also support an ids argument/aesthetic to ensure smooth transitions between objects with the same id (which helps facilitate object constancy).\n\n4.1 Building an animated bubble plot: ggplotly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using ggplotly() method.\n\nPlotCode Chunk\n\n\n\n\nCode\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\nThe animated bubble plot above includes a play/pause button and a slider component for controlling the animation.\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\nLearning Points\n\n\n\n\nAppropriate ggplot2 functions are used to create a static bubble plot. The output is then saved as an R object called gg.\nggplotly() is then used to convert the R graphic object into an animated svg object.\n\n\n\n\n\n\nNotice that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below.\n\nPlotCode Chunk\n\n\n\n\nCode\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n4.2 Building an animated bubble plot: plot_ly() method\nIn this sub-section, you will learn how to create an animated bubble plot by using plot_ly() method.\n\nPlotCode Chunk\n\n\n\n\nCode\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex03B/In_Class_Ex03B.html#reference",
    "href": "Hands_On_Exercise/Hands_On_Ex03B/In_Class_Ex03B.html#reference",
    "title": "Programming Animated Data Graphics with R",
    "section": "5 Reference",
    "text": "5 Reference\n\nGetting Started\nVisit this link for a very interesting implementation of gganimate by your senior.\nBuilding an animation step-by-step with gganimate.\nCreating a composite gif with multiple gganimate panels"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "In_Class_Exercise/In_Class_Ex01/In_Class_Ex01.html",
    "href": "In_Class_Exercise/In_Class_Ex01/In_Class_Ex01.html",
    "title": "In-Class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used:\n\ntidyverse\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In_Class_Exercise/In_Class_Ex01/In_Class_Ex01.html#loading-r-packages",
    "href": "In_Class_Exercise/In_Class_Ex01/In_Class_Ex01.html#loading-r-packages",
    "title": "In-Class Exercise 1: Now You See It!",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used:\n\ntidyverse\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse, haven)"
  },
  {
    "objectID": "In_Class_Exercise/In_Class_Ex01/In_Class_Ex01.html#importing-pisa-data",
    "href": "In_Class_Exercise/In_Class_Ex01/In_Class_Ex01.html#importing-pisa-data",
    "title": "In-Class Exercise 1: Now You See It!",
    "section": "Importing PISA Data",
    "text": "Importing PISA Data\nThe code chunk below uses read_sas() function of haven to import PISA data into the R environment.\n#| eval: false was used to prevent the code chunk from running.\n\nstu_qqq &lt;- read_sas(\"Data/cy08msp_stu_qqq.sas7bdat\")\n\nThe code chunk below uses the filter() function of dplyr to retrieve records from Singapore (SGP) only.\n\nstu_qqq_SG &lt;- stu_qqq %&gt;% \n  filter(CNT == \"SGP\")\n\nThe code chunks below uses write_rds() and read_rds() to save and read the records from Singapore in R format.\n\nwrite_rds(stu_qqq_SG, \n          \"Data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html",
    "href": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html",
    "title": "Is Every School a Good School?",
    "section": "",
    "text": "Is every school a good school? According to OECD education director Andreas Schleicher, Singapore “managed to achieve excellence without wide differences between children from wealthy and disadvantaged families”. This spells good news for Singapore as its education system strives towards every school being a good school. Yet, public sentiments differs starkly from this. There is a strong belief that disparities continue to exist between elite and neighbourhood schools, between students from higher and lower socioeconomic status, and between students from immigrant and non-immigrant families.\nIn this short exercise, we will study the 2022 Programme for International Student Assessment (PISA) data to reveal the following:\n\nthe distribution of Singapore students’ performance in Mathematics, Reading and Science; and\nthe relationship between the aforementioned performances with schools, gender and socioeconomic status of the students."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#loading-relevant-r-packages",
    "href": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#loading-relevant-r-packages",
    "title": "Is Every School a Good School?",
    "section": "2.1 Loading Relevant R Packages",
    "text": "2.1 Loading Relevant R Packages\nThe following code chunk uses the pacman::p_load() function to install and load the relevant R packages:\n\npacman::p_load(haven, tidyverse, ggplot2, e1071, dplyr, \n               forcats, rstatix,kableExtra, ggstatsplot, \n               hrbrthemes, tidyr, viridis, ggridges, nortest,\n               tm, proustr, VennDiagram)"
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#importing-pisa-dataset",
    "href": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#importing-pisa-dataset",
    "title": "Is Every School a Good School?",
    "section": "2.2 Importing PISA Dataset",
    "text": "2.2 Importing PISA Dataset\nThe dataset provided for this exercise is extremely large with over 600,000 records from students globally. For the purpose of our task, we will filter the dataset to only include records of students from Singapore (with country code “SGP”). The resultant dataset stu_sg has 6606 records.\nThe data dictionary of all 1279 variables can be found in the PISA 2022 Database Codebook.\n\n\nCode\nstu_qqq &lt;- read_sas(\"Data/cy08msp_stu_qqq.sas7bdat\")\nstu_sg &lt;- stu_qqq %&gt;% filter(CNT == \"SGP\")\nwrite_rds(stu_sg, \"Data/stu_SG.rds\")\n\n\n\nstu_sg &lt;- read_rds(\"data/stu_sg.rds\")"
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#distribution-of-performance-in-mathematics",
    "href": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#distribution-of-performance-in-mathematics",
    "title": "Is Every School a Good School?",
    "section": "3.1 Distribution of Performance in Mathematics",
    "text": "3.1 Distribution of Performance in Mathematics\nThe code chunk below defines the performance bands based on the lower and upper bound for scores as stipulated by PISA.\n\nrects_math &lt;- data.frame(ystart = c(46, 420.07, 482.38, 544.68, 606.99, 669.30), \n                    yend = c(420.07, 482.38, 544.68, 606.99, 669.30, 950),\n                    Levels = c(\"Level 1\", \"Level 2\", \"Level 3\", \"Level 4\", \"Level 5\", \"Level 6\"))\n\n\n\n\n\n\n\nDesign Considerations for Violin Plot\n\n\n\n\nPlotting of the performance bands using geom_rect() has to precede all other plots to ensure that it is set as the background of the plot.\nBy default, geom_violin() sets trim=TRUE and the tails of the violins are trimmed. It was thus set to FALSE to ensure the entire range of performance scores is included in the plot.\nThe five-number summary statistics (minimum, first quartile, median, third quartile and maximum in black font) and the mean (in blue font) are displayed on the plot for greater clarity.\n\n\n\n\n\nCode\nggplot(data=stu_sg, aes(x=CNTRYID, y=as.numeric(PV5MATH))) + \n  \n  # Adding background rectangle shading to mark out performance bands\n  geom_rect(data=rects_math,\n            aes(ymin=as.numeric(ystart), ymax=as.numeric(yend), xmin=-Inf, xmax=Inf, fill=Levels),\n            inherit.aes=FALSE, alpha=0.15) +\n  \n  \n  # Adding axis labels, title and subtitle\n  labs(x=\"\", y=\"PV5 Scores for Mathematics\",\n       title=\"Mathematics Scores of Students\", \n       subtitle=\"\\n Mean score labelled in blue. Minimum, quantiles and maximum labelled in black.\") +\n  \n  # Adding violin plot\n  geom_violin(trim=FALSE, color=\"red\", alpha=0) + \n  \n  # Adding boxplot\n  geom_boxplot(width=0.1, color=\"black\", alpha=0) + \n  \n  # Adding summary statistic annotations\n  stat_summary(geom=\"text\", fun.y=quantile, \n               aes(label=sprintf(\"%1.1f\", ..y..)),\n               position=position_nudge(x=0.15), size=3) +\n  \n  # Adding mean annotation\n  stat_summary(geom=\"point\", fun.y=\"mean\", color=\"blue\", fill=\"blue\", size=2, shape=21) +\n  stat_summary(geom=\"text\", fun.y=\"mean\", color=\"blue\", \n               aes(label=sprintf(\"%1.1f\", ..y..)),\n               position=position_nudge(x=0.09), size=3) + \n\n  # Setting x-axis limits as CNTRYID was used as x-variable arbitrarily - all records have CTRYID of 702\n  scale_x_continuous(limits=c(701.5, 702.5)) +\n  \n  coord_flip() + \n  theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\n\n\n\n\n\n\nInsights on Mathematics Performance\n\n\n\n\nThe mean score for Mathematics is 573.4 while the median score is 580.0. Both scores fall within Level 4 on the Proficiency Scale, indicating that the average student in Singapore are moderately proficient in Mathematics.\nThe distribution displays a slight left skew (skewness = -0.246 using skewness()). With the peak or mode of the distribution lying towards the right, there is a larger number of students with performance scores that are closer to the higher end.\nThe lower bound of Level 5 proficiency of 606.99 lies between the median (580.0) and the upper quartile (647.3). This indicates that a rather substantial portion (albeit less than 50%) of students are top performers in Mathematics."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#distribution-of-performance-in-science",
    "href": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#distribution-of-performance-in-science",
    "title": "Is Every School a Good School?",
    "section": "3.2 Distribution of Performance in Science",
    "text": "3.2 Distribution of Performance in Science\nUsing the same approach as Section 3.1, the violin plot was generated for Science scores.\n\n\nCode\nrects_sci &lt;- data.frame(ystart = c(39, 409.54, 484.14, 558.73, 633.33, 707.93), \n                    yend = c(409.54, 484.14, 558.73, 633.33, 707.93, 924),\n                    Levels = c(\"Level 1\", \"Level 2\", \"Level 3\", \"Level 4\", \"Level 5\", \"Level 6\"))\n\nggplot(data=stu_sg, aes(x=CNTRYID, y=as.numeric(PV5SCIE))) + \n  \n  # Adding background rectangle shading to mark out performance bands\n  geom_rect(data=rects_sci,\n            aes(ymin=as.numeric(ystart), ymax=as.numeric(yend), xmin=-Inf, xmax=Inf, fill=Levels),\n            inherit.aes=FALSE, alpha=0.15) +\n  \n  \n  # Adding axis labels, title and subtitle\n  labs(x=\"\", y=\"PV5 Scores for Science\",\n       title=\"Science Scores of Students\", \n       subtitle=\"\\n Mean score labelled in blue. Minimum, quantiles and maximum labelled in black.\") +\n  \n  # Adding violin plot\n  geom_violin(trim=FALSE, color=\"red\", alpha=0) + \n  \n  # Adding boxplot\n  geom_boxplot(width=0.1, color=\"black\", alpha=0) + \n  \n  # Adding summary statistic annotations\n  stat_summary(geom=\"text\", fun.y=quantile, \n               aes(label=sprintf(\"%1.1f\", ..y..)),\n               position=position_nudge(x=0.15), size=3) +\n  \n  # Adding mean annotation\n  stat_summary(geom=\"point\", fun.y=\"mean\", color=\"blue\", fill=\"blue\", size=2, shape=21) +\n  stat_summary(geom=\"text\", fun.y=\"mean\", color=\"blue\", \n               aes(label=sprintf(\"%1.1f\", ..y..)),\n               position=position_nudge(x=0.09), size=3) + \n\n  # Setting x-axis limits as CNTRYID was used as x-variable arbitrarily - all records have CTRYID of 702\n  scale_x_continuous(limits=c(701.5, 702.5)) +\n  \n  coord_flip() + \n  theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\n\n\n\n\n\n\nInsights on Science Performance\n\n\n\n\nThe mean score for Science is 561.5 while the median score is 569.7. Both scores fall within Level 4 on the Proficiency Scale, indicating that the average student in Singapore are moderately proficient in Science.\nThe distribution displays a slight left skew (skewness = -0.297 using skewness()). With the peak or mode of the distribution lying towards the right, there is a larger number of students with performance scores that are closer to the higher end.\nAround 25% of students attained scores more than or equal to 632.1. With the score point range starting from 633.33 for Level 5, slightly less than 25% of Singapore students are top performers in Science."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#distribution-of-performance-in-reading",
    "href": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#distribution-of-performance-in-reading",
    "title": "Is Every School a Good School?",
    "section": "3.3 Distribution of Performance in Reading",
    "text": "3.3 Distribution of Performance in Reading\nUsing the same approach as Section 3.1, the violin plot was generated for Reading scores.\n\n\nCode\nrects_read &lt;- data.frame(ystart = c(0, 407.47, 480.18, 552.89, 625.61, 698.32), \n                    yend = c(407.47, 480.18, 552.89, 625.61, 698.32, 938),\n                    Levels = c(\"Level 1\", \"Level 2\", \"Level 3\", \"Level 4\", \"Level 5\", \"Level 6\"))\n\nggplot(data=stu_sg, aes(x=CNTRYID, y=as.numeric(PV5READ))) + \n  \n  # Adding background rectangle shading to mark out performance bands\n  geom_rect(data=rects_sci,\n            aes(ymin=as.numeric(ystart), ymax=as.numeric(yend), xmin=-Inf, xmax=Inf, fill=Levels),\n            inherit.aes=FALSE, alpha=0.15) +\n  \n  \n  # Adding axis labels, title and subtitle\n  labs(x=\"\", y=\"PV5 Scores for Reading\",\n       title=\"Science Scores of Reading\", \n       subtitle=\"\\n Mean score labelled in blue. Minimum, quantiles and maximum labelled in black.\") +\n  \n  # Adding violin plot\n  geom_violin(trim=FALSE, color=\"red\", alpha=0) + \n  \n  # Adding boxplot\n  geom_boxplot(width=0.1, color=\"black\", alpha=0) + \n  \n  # Adding summary statistic annotations\n  stat_summary(geom=\"text\", fun.y=quantile, \n               aes(label=sprintf(\"%1.1f\", ..y..)),\n               position=position_nudge(x=0.15), size=3) +\n  \n  # Adding mean annotation\n  stat_summary(geom=\"point\", fun.y=\"mean\", color=\"blue\", fill=\"blue\", size=2, shape=21) +\n  stat_summary(geom=\"text\", fun.y=\"mean\", color=\"blue\", \n               aes(label=sprintf(\"%1.1f\", ..y..)),\n               position=position_nudge(x=0.09), size=3) + \n\n  # Setting x-axis limits as CNTRYID was used as x-variable arbitrarily - all records have CTRYID of 702\n  scale_x_continuous(limits=c(701.5, 702.5)) +\n  \n  coord_flip() + \n  theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank())\n\n\n\n\n\n\n\n\n\n\n\nInsights on Reading Performance\n\n\n\n\nThe mean score for Reading is 541.9 while the median score is 551.2. Both scores fall within Level 3 on the Proficiency Scale, indicating that an average student in Singapore are moderately proficient in Reading. However, students recorded an average of Level 4 in Mathematics and Science, thus indicating that students in Singapore may be more proficient in Mathematics and Science compared to Reading\nThe distribution displays a slight left skew (skewness = -0.366 using skewness()). With the peak or mode of the distribution lying towards the right, there is a larger number of students with performance scores that are closer to the higher end.\nAround 25% of students attained scores more than or equal to 617.1. With the score point range starting from 625.61 for Level 5, slightly less than 25% of Singapore students are top performers in Reading."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#relationship-between-performance-and-schools",
    "href": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#relationship-between-performance-and-schools",
    "title": "Is Every School a Good School?",
    "section": "4.1 Relationship between Performance and Schools",
    "text": "4.1 Relationship between Performance and Schools\nThe Ministry of Education (MOE) in Singapore grouped schools into nine bands with each band comprising schools with similar academic performance. The top 50 Special/Express and top 40 Normal course ranking tables were published to rank schools’ academic performances. While the school banding by academic results was abolished in 2012, informal school rankings developed by parents or interested parties continue to exist to this day. This highlights a common sentiments among parents and students - not all schools are equal and some are better than others.\nIn this section, we explore the relationship between schools and the performance of its students. Specifically, we ask if the choice of school affects the performance of students in terms of their performance in Mathematics, Science and Reading.\n\n4.1.1 Grouping Schools for Meaningful Analysis\nIn the PISA database, the schools of individual students are recorded as 8-character code CNTSCHID. There are 164 unique CNTSCHID in our stu_sg database. Such large number of school categories will clutter our visualisations and make subsequent analysis unmeaningful. For increased clarity, we will reduce the number of school categories by grouping the schools into 4 groups - Groups 1 to 4. For each subject, Group 1 will consist of schools with the lowest scores, followed by Group 2 then Group 3, with Group 4 consisting of schools with the highest scores.\n\n\n\n\n\n\nProcess for Grouping Schools\n\n\n\n\nThe group_by() function from the dplyr package was used to group the dataframe using the CNTSCHID column then finding the mean of the Plausible Value 5 (PV5) scores for each group\nThe resultant dataframe (consisting of School ID and corresponding mean PV5 scores) was sorted based on the mean PV5 scores in ascending order using the order() function.\nThe ordered list for schools is split into four equal groups, with Group 1 consisting of schools with the lowest scores and Group 4 consisting of schools with the highest scores.\n\n\n\nGroup\nRanked (in ascending order) Data Points\n\n\n\n\n1\n1 - 41\n\n\n2\n42 - 82\n\n\n3\n83 - 123\n\n\n4\n124 - 164\n\n\n\nThe schools are labelled based on the group they belong to, namely Group 1, Group 2, Group 3 and Group 4, in a new column called group.\n\n\n\n\n\nCode Block for Grouping Schools for Mathematics\n# Group based on School ID then find mean PV5 score\nmath_sch &lt;- stu_sg %&gt;%\n  group_by(CNTSCHID) %&gt;%\n  summarise(mean = mean(PV5MATH))\n\n# Sort based on mean PV5 score\nmath_sch &lt;- math_sch[order(math_sch$mean), ]\n\n# Label where school lies\nmath_sch$group &lt;- c(rep(\"Group 1\", 41), rep(\"Group 2\", 41), rep(\"Group 3\", 41), rep(\"Group 4\", 41))\n\n\n\n\nCode Block for Grouping Schools for Science\n# Group based on School ID then find mean PV5 score\nsci_sch &lt;- stu_sg %&gt;%\n  group_by(CNTSCHID) %&gt;%\n  summarise(mean = mean(PV5SCIE))\n\n# Sort based on mean PV5 score\nsci_sch &lt;- sci_sch[order(sci_sch$mean), ]\n\n# Label where school lies\nsci_sch$group &lt;- c(rep(\"Group 1\", 41), rep(\"Group 2\", 41), rep(\"Group 3\", 41), rep(\"Group 4\", 41))\n\n\n\n\nCode Block for Grouping Schools for Reading\n# Group based on School ID then find mean PV5 score\nread_sch &lt;- stu_sg %&gt;%\n  group_by(CNTSCHID) %&gt;%\n  summarise(mean = mean(PV5READ))\n\n# Sort based on mean PV5 score\nread_sch &lt;- read_sch[order(read_sch$mean), ]\n\n# Label where school lies\nread_sch$group &lt;- c(rep(\"Group 1\", 41), rep(\"Group 2\", 41), rep(\"Group 3\", 41), rep(\"Group 4\", 41))\n\n\n\n\n4.1.2 Relationship between Mathematics Scores and School\nThe relationship between Mathematics scores and the school the students attend will be visualised using a box plot. As box plots helps visualise the center and spread of data, clear comparisons of the mean performance between school groups can be made using side-by-side box plots.\n\n\n\n\n\n\nDesign Consideration for Box Plot\n\n\n\n\nThe mean value can be reflected in the plot using geom_text() and in-built summary functionality stat_summary()of ggplot2. As the dataframe math_sch has a variable called mean, stat_summary() refers to the variable instead of the mean function from the {base} package. To circumvent this issue, the fully qualified name base::mean is used instead of the base mean.\nThe default grid background can be removed for greater clarity using theme_bw().\nThe legend was removed using theme() as it was unnecessary for interpretation of the plot.\n\n\n\n\nEDA PlotNormality TestANOVA\n\n\nBased on the box plots, it appears that Mathematics scores are lowest in schools in the min group and highest in schools in the max group.\n\n\nCode\nmath_sch %&gt;%\n  \n  # Plotting boxplot of mean scores against groups\n  ggplot(aes(x=group, y=mean, fill=group)) +\n  geom_boxplot(alpha=0.5) +\n  \n  # Labelling plot and axis\n  ggtitle(\"Mean Mathematics Score Across Groups\") + \n  xlab(\"\") + \n  ylab(\"Mean PV5MATH Score\") +\n  \n  # Adding mean value for each group\n  stat_summary(fun=base::mean, geom=\"point\", shape=20, size=2, color=\"red\", fill=\"red\") +\n  stat_summary(fun=base::mean, color=\"red\", geom=\"text\", vjust=-4, size=3, \n               aes(label=paste(\"Mean:\", round(..y.., digits=1)))) + \n  \n  # Removing grid background\n  theme_bw() +\n  \n  # Removing legend\n  theme(legend.position=\"none\")\n\n\n\n\n\n\n\nTo ascertain our observation, tests for normality was first conducted on the distribution for each school group. A visual assessment via a Q-Q plot and a significance test via the Shapiro-Wilk’s test were used to ascertain whether the data show a serious deviation from normality. The Q-Q plot was plotted using the geom_qq() and geom_qq_line() functions from the ggplot library while the Shapiro-Wilk’s test was conducted using the shapiro_test() function from the rstatix library.\n\n\nCode\nmath_sch %&gt;%\n  ggplot(aes(sample=mean)) +\n  geom_qq() + geom_qq_line() + \n  facet_wrap(~group, scales=\"free_y\", nrow=1) +\n  labs(title=\"Normality Assumption Test\",\n       x=\"\", y=\"\") + \n  theme_bw() + \n  theme(axis.text.x=element_blank(), \n        axis.text.y=element_blank(), \n        panel.grid.major=element_blank(),\n        panel.grid.minor=element_blank(),\n        axis.ticks=element_blank())\n\n\n\n\n\n\n\nCode\nmath_sch %&gt;%\n  group_by(group) %&gt;%\n  shapiro_test(mean) %&gt;% \n  kbl() %&gt;%\n  kable_styling(full_width=FALSE, bootstrap_options = \"responsive\")\n\n\n\n\n\n\ngroup\nvariable\nstatistic\np\n\n\n\n\nGroup 1\nmean\n0.6774551\n0.0000000\n\n\nGroup 2\nmean\n0.9675082\n0.2851858\n\n\nGroup 3\nmean\n0.9253653\n0.0101652\n\n\nGroup 4\nmean\n0.9665143\n0.2640175\n\n\n\n\n\n\n\n\nSince the p-values for Groups 1 and 3 are less than 0.05, Mathematics scores do not follow a normal distribution across all groups. A non-parametric ANOVA test will thus be used to compare the mean Mathematics score.\n\n\nA non-parametric Kruskal-Wallis One-Way ANOVA test was used to compare the mean Mathematics scores across groups, with the following hypothesis:\nH0: The mean Mathematics scores is the same for all school groups.\nH1: The mean Mathematics scores is not the same for all school groups.\nThe Kruskal-Wallist and post-hoc tests was conducted using the ggbetweenstats() function from the ggstatsplot package.\n\n\nCode\nggbetweenstats(\n  data=math_sch,x=group, y=mean,\n  type=\"nonparametric\",plot.type=\"box\",\n  pairwise.comparisons=TRUE, pairwise.display=\"significant\", \n  centrality.plotting=FALSE, bf.message=FALSE)\n\n\n\n\n\nThe p-values of the Kruskal-Wallis test and all pairwise tests are less than 0.05. There is thus sufficient evidence to reject H0 and conclude that the mean Mathematics score is significantly different for each group.\n\n\n\n\n\n\n\n\n\nInsights on Relationship between Schools and Mathematics Performance\n\n\n\n\nMathematics scores are lowest in Group 1 schools and highest in Group 4 schools. The difference in mean scores between the two groups is 144.6.\nMathematics scores increases in the following order: Group 1, Group 2, Group 3, Group 4.\n\n\n\n\n\n4.1.3 Relationship between Science Scores and School\n\nEDA PlotNormalityANOVA\n\n\nBased on the bar chart, it appears that Science scores are lowest in schools in the min group and highest in schools in the max group.\n\n\nCode\nsci_sch %&gt;%\n  \n  # Plotting boxplot of mean scores against groups\n  ggplot(aes(x=group, y=mean, fill=group)) +\n  geom_boxplot(alpha=0.5) +\n  \n  # Labelling plot and axis\n  ggtitle(\"Mean Science Score Across Groups\") + \n  xlab(\"\") + \n  ylab(\"Mean PV5SCIE Score\") +\n  \n  # Adding mean value for each group\n  stat_summary(fun=base::mean, geom=\"point\", shape=20, size=2, color=\"red\", fill=\"red\") +\n  stat_summary(fun=base::mean, color=\"red\", geom=\"text\", vjust=-3, size=3, \n               aes(label=paste(\"Mean:\", round(..y.., digits=1)))) + \n  \n  # Removing grid background\n  theme_bw() +\n  \n  # Removing legend\n  theme(legend.position=\"none\")\n\n\n\n\n\n\n\n\n\nCode\nsci_sch %&gt;%\n  ggplot(aes(sample=mean)) +\n  geom_qq() + geom_qq_line() + \n  facet_wrap(~group, scales=\"free_y\", nrow=1) +\n  labs(title=\"Normality Assumption Test\",\n       x=\"\", y=\"\") + \n  theme_bw() + \n  theme(axis.text.x=element_blank(), \n        axis.text.y=element_blank(), \n        panel.grid.major=element_blank(),\n        panel.grid.minor=element_blank(),\n        axis.ticks=element_blank())\n\n\n\n\n\n\n\nCode\nsci_sch %&gt;%\n  group_by(group) %&gt;%\n  shapiro_test(mean) %&gt;% \n  kbl() %&gt;%\n  kable_styling(full_width=FALSE, bootstrap_options = \"responsive\")\n\n\n\n\n\n\ngroup\nvariable\nstatistic\np\n\n\n\n\nGroup 1\nmean\n0.7447895\n0.0000005\n\n\nGroup 2\nmean\n0.9431588\n0.0403869\n\n\nGroup 3\nmean\n0.9116637\n0.0037318\n\n\nGroup 4\nmean\n0.9505109\n0.0729322\n\n\n\n\n\n\n\n\nSince the p-values for Groups 1, 2 and 3 are less than 0.05, Science scores do not follow a normal distribution across all groups. A non-parametric ANOVA test will thus be used to compare the mean Science score.\n\n\nA non-parametric Kruskal-Wallis One-Way ANOVA test was used to compare the mean Science scores across groups, with the following hypothesis:\nH0: The mean Science scores is the same for all school groups.\nH1: The mean Science scores is not the same for all school groups.\nThe Kruskal-Wallist and post-hoc tests was conducted using the ggbetweenstats() function from the ggstatsplot package.\n\n\nCode\nggbetweenstats(\n  data=sci_sch,x=group, y=mean,\n  type=\"nonparametric\",plot.type=\"box\",\n  pairwise.comparisons=TRUE, pairwise.display=\"significant\", \n  centrality.plotting=FALSE, bf.message=FALSE)\n\n\n\n\n\nThe p-values of the Kruskal-Wallis test and all pairwise tests are less than 0.05. There is thus sufficient evidence to reject H0 and conclude that the mean Science score is significantly different for each group.\n\n\n\n\n\n\n\n\n\nInsights on Relationship between Schools and Science Performance\n\n\n\n\nScience scores are lowest in Group 1 schools and highest in Group 4 schools. The difference in mean scores between the two groups is 138.9.\nScience scores increases in the following order: Group 1, Group 2, Group 3, Group 4.\n\n\n\n\n\n4.1.4 Relationship between Reading Scores and Schools\n\nEDA PlotNormalityANOVA\n\n\nBased on the bar chart, it appears that Reading scores are lowest in schools in the min group and highest in schools in the max group.\n\n\nCode\nread_sch %&gt;%\n  \n  # Plotting boxplot of mean scores against groups\n  ggplot(aes(x=group, y=mean, fill=group)) +\n  geom_boxplot(alpha=0.5) +\n  \n  # Labelling plot and axis\n  ggtitle(\"Mean Reading Score Across Groups\") + \n  xlab(\"\") + \n  ylab(\"Mean PV5READ Score\") +\n  \n  # Adding mean value for each group\n  stat_summary(fun=base::mean, geom=\"point\", shape=20, size=2, color=\"red\", fill=\"red\") +\n  stat_summary(fun=base::mean, color=\"red\", geom=\"text\", vjust=-3, size=3, \n               aes(label=paste(\"Mean:\", round(..y.., digits=1)))) + \n  \n  # Removing grid background\n  theme_bw() +\n  \n  # Removing legend\n  theme(legend.position=\"none\")\n\n\n\n\n\n\n\n\n\nCode\nread_sch %&gt;%\n  ggplot(aes(sample=mean)) +\n  geom_qq() + geom_qq_line() + \n  facet_wrap(~group, scales=\"free_y\", nrow=1) +\n  labs(title=\"Normality Assumption Test\",\n       x=\"\", y=\"\") + \n  theme_bw() + \n  theme(axis.text.x=element_blank(), \n        axis.text.y=element_blank(), \n        panel.grid.major=element_blank(),\n        panel.grid.minor=element_blank(),\n        axis.ticks=element_blank())\n\n\n\n\n\n\n\nCode\nread_sch %&gt;%\n  group_by(group) %&gt;%\n  shapiro_test(mean) %&gt;% \n  kbl() %&gt;%\n  kable_styling(full_width=FALSE, bootstrap_options = \"responsive\")\n\n\n\n\n\n\ngroup\nvariable\nstatistic\np\n\n\n\n\nGroup 1\nmean\n0.6930397\n0.0000001\n\n\nGroup 2\nmean\n0.9266733\n0.0112172\n\n\nGroup 3\nmean\n0.9316844\n0.0164318\n\n\nGroup 4\nmean\n0.9591611\n0.1469983\n\n\n\n\n\n\n\n\nSince the p-values for Groups 1, 2 and 3 are less than 0.05, Reading scores do not follow a normal distribution across all groups. A non-parametric ANOVA test will thus be used to compare the mean Reading score.\n\n\nA non-parametric Kruskal-Wallis One-Way ANOVA test was used to compare the mean Reading scores across groups, with the following hypothesis:\nH0: The mean Reading scores is the same for all school groups.\nH1: The mean Reading scores is not the same for all school groups.\nThe Kruskal-Wallist and post-hoc tests was conducted using the ggbetweenstats() function from the ggstatsplot package.\n\n\nCode\nggbetweenstats(\n  data=read_sch,x=group, y=mean,\n  type=\"nonparametric\",plot.type=\"box\",\n  pairwise.comparisons=TRUE, pairwise.display=\"significant\", \n  centrality.plotting=FALSE, bf.message=FALSE)\n\n\n\n\n\nThe p-values of the Kruskal-Wallis test and all pairwise tests are less than 0.05. There is thus sufficient evidence to reject H0 and conclude that the mean Reading score is significantly different for each group.\n\n\n\n\n\n\n\n\n\nInsights on Relationship between Schools and Reading Performance\n\n\n\n\nReading scores are lowest in Group 1 schools and highest in Group 4 schools. The difference in mean scores between the two groups is 143.6.\nReading scores increases in the following order: Group 1, Group 2, Group 3, Group 4.\n\n\n\n\n\n4.1.5 Relationship between Schools and Overall Performance\nFrom Sections 4.1.2 to 4.1.4, we observed that performance for all subjects increases from Group 1 through to 4. It may be the case that different schools specialise in different subjects, which does not seem to be a completely unfavourable scenario as students can choose their schools based on their passion in certain areas. This would mean that the schools in each group differs from subject to subject. However, if the composition of schools in each group remain relatively stable across subjects, it would mean that high performance is clustered within a select few schools and lower performance is more prevalent in other select few schools. This may be bad news as it shows that students may face huge stress to gain entry in such Group 4 schools while students from Group 4 schools may be labelled as having poor academic performance right from the get-go.\nIn particular, we will focus on Group 1 and Group 4 as they are at the extreme ends of the performance spectrum. A Venn Diagram will be used to visualise the number of schools that are common between each pair of school groups. This gives a clear visualisation of how many schools each pair of school groups have in common. The venn.diagram() function from the VennDiagram package will be used.\n\nGroup 1 SchoolsGroup 4 Schools\n\n\n\n\nCode\n# Preparing dataset\ng1_math &lt;- math_sch %&gt;% filter(group==\"Group 1\")\ng1_math$subject &lt;- \"Math\"\ng1_sci &lt;- sci_sch %&gt;% filter(group==\"Group 1\")\ng1_sci$subject &lt;- \"Science\"\ng1_read &lt;- read_sch %&gt;% filter(group==\"Group 1\")\ng1_read$subject &lt;- \"Reading\"\ng1 &lt;- rbind(g1_math[, c(1,4)], g1_sci[, c(1,4)], g1_read[, c(1,4)])\n\n# Plotting Venn Diagram\nvenn.diagram(\n  x=list(\n    g1 %&gt;% filter(subject==\"Math\") %&gt;% select(CNTSCHID) %&gt;% unlist(),\n    g1 %&gt;% filter(subject==\"Science\") %&gt;% select(CNTSCHID) %&gt;% unlist(),\n    g1 %&gt;% filter(subject==\"Reading\") %&gt;% select(CNTSCHID) %&gt;% unlist()\n  ), \n  category.names=c(\"Math\", \"Science\", \"Reading\"), \n  filename=\"venn_g1.png\", \n  output = TRUE ,\n          imagetype=\"png\" ,\n          height = 480 , \n          width = 480 , \n          resolution = 300,\n          compression = \"lzw\",\n          lwd = 1,\n          col=c(\"#440154ff\", '#21908dff', '#fde725ff'),\n          fill = c(alpha(\"#440154ff\",0.3), alpha('#21908dff',0.3), alpha('#fde725ff',0.3)),\n          cex = 0.5,\n          fontfamily = \"sans\",\n          cat.cex = 0.3,\n          cat.default.pos = \"outer\",\n          cat.pos = c(-27, 27, 135),\n          cat.dist = c(0.055, 0.055, 0.085),\n          cat.fontfamily = \"sans\",\n          cat.col = c(\"#440154ff\", '#21908dff', '#fde725ff'),\n          rotation = 1\n)\n\n\n\n\n\nVenn Diagram of Group 1 Schools\n\n\nFrom the Venn Diagram, we can see a significant overlap of schools in Group 1. Each subject has 41 schools in Group 1. Out of the 41 schools, 31 schools belong to Group 1 for all three subjects. This means that students with the lowest performance in all three subjects are largely concentrated in the same schools.\n\n\n\n\nCode\n# Preparing dataset\ng4_math &lt;- math_sch %&gt;% filter(group==\"Group 4\")\ng4_math$subject &lt;- \"Math\"\ng4_sci &lt;- sci_sch %&gt;% filter(group==\"Group 4\")\ng4_sci$subject &lt;- \"Science\"\ng4_read &lt;- read_sch %&gt;% filter(group==\"Group 4\")\ng4_read$subject &lt;- \"Reading\"\ng4 &lt;- rbind(g4_math[, c(1,4)], g4_sci[, c(1,4)], g4_read[, c(1,4)])\n\n# Plotting Venn Diagram\nvenn.diagram(\n  x=list(\n    g4 %&gt;% filter(subject==\"Math\") %&gt;% select(CNTSCHID) %&gt;% unlist(),\n    g4 %&gt;% filter(subject==\"Science\") %&gt;% select(CNTSCHID) %&gt;% unlist(),\n    g4 %&gt;% filter(subject==\"Reading\") %&gt;% select(CNTSCHID) %&gt;% unlist()\n  ), \n  category.names=c(\"Math\", \"Science\", \"Reading\"), \n  filename=\"venn_g4.png\", \n  output = TRUE ,\n          imagetype=\"png\" ,\n          height = 480 , \n          width = 480 , \n          resolution = 300,\n          compression = \"lzw\",\n          lwd = 1,\n          col=c(\"#440154ff\", '#21908dff', '#fde725ff'),\n          fill = c(alpha(\"#440154ff\",0.3), alpha('#21908dff',0.3), alpha('#fde725ff',0.3)),\n          cex = 0.5,\n          fontfamily = \"sans\",\n          cat.cex = 0.3,\n          cat.default.pos = \"outer\",\n          cat.pos = c(-27, 27, 135),\n          cat.dist = c(0.055, 0.055, 0.085),\n          cat.fontfamily = \"sans\",\n          cat.col = c(\"#440154ff\", '#21908dff', '#fde725ff'),\n          rotation = 1\n)\n\n\n\n\n\nVenn Diagram of Group 4 Schools\n\n\nFrom the Venn Diagram, we can see a even more significant overlap of schools in Group 4. Each subject has 41 schools in Group 4. Out of the 41 schools, 37 schools belong to Group 4 for all three subjects. This means that students with the highest performance in all three subjects are largely concentrated in the same schools.\n\n\n\n\n\n\n\n\n\nInsights on Relationship between Schools and Overall Performance\n\n\n\n\nStudents with the lowest performance across all subjects are largely concentrated in the same schools\nStudents with the highest performance across all subjects are also largely concentrated in the same schools"
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#relationship-between-performance-and-gender",
    "href": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#relationship-between-performance-and-gender",
    "title": "Is Every School a Good School?",
    "section": "4.2 Relationship between Performance and Gender",
    "text": "4.2 Relationship between Performance and Gender\nResearch shows that females and males excel in different areas. According to a study published in American Psychologist, researchers found that girls scored higher on literacy (or reading) tests than boys after reviewing data on 3.9 million literacy tests. Conversely, Wrigley-Asante et al. (2023) explained that the overall academic performance of males was rated higher than females.\nIn this section, we explore the relationship between gender and the performance of its students. Specifically, we ask if the gender affects the performance of students in terms of their performance in Mathematics, Science and Reading.\nIn the PISA dataset, the gender of students are recorded in the ST004D01T column. A quick check of the data using the n_distinct() function from the dplyr package revealed that there were only 2 unique values in the column - 1 for female and 2 for male. Using is.na() function from the {base} package also showed that there were no missing values. Therefore, the only data wrangling step performed was to recode the column to display ‘Female’ and ‘Male’ instead of values.\n\n\nCode\n# Recoding ST004D01T column \nstu_sg$ST004D01T[stu_sg$ST004D01T == '1'] &lt;- 'Female'\nstu_sg$ST004D01T[stu_sg$ST004D01T == '2'] &lt;- 'Male'\n\n\nThe distribution of subject scores for each gender group will be visualised using a ridgeline plot. As the plots are assigned to the same horizontal scale and presented with a slight overlap, the difference in scores between both genders will be made obvious by observing whether a gender’s distribution lies to the left or right of the distribution of the other gender.\n\n\n\n\n\n\nDesign Considerations for Ridgeline Plot\n\n\n\n\nThe quantile lines are plotted into ridgeline plot in order to make the median and interquartile range obvious. The geom_density_ridges_gradient() function was used to colour the plot via the calculated after_stat(quantile) aesthetic.\nThe transparency of the fill was increased so as to better see how the distributions between both genders overlaps by using the alpha argument.\n\n\n\n\nEDA PlotNormality Testt-Test\n\n\nFrom the ridgeline plots, it appears that females outperform males in Reading while males outperform females in Mathematics and Science.\n\n\nCode\n# Pivoting dataframe for facet_wrap()\ngender &lt;- stu_sg[, c(\"ST004D01T\", \"PV5MATH\", \"PV5SCIE\", \"PV5READ\")]\ngender &lt;- gender %&gt;% pivot_longer(cols=c(\"PV5MATH\", \"PV5SCIE\", \"PV5READ\"))\n# Renaming subjects\ngender$name[gender$name == \"PV5MATH\"] &lt;- \"Mathematics\" \ngender$name[gender$name == \"PV5SCIE\"] &lt;- \"Science\" \ngender$name[gender$name == \"PV5READ\"] &lt;- \"Reading\" \n\nggplot(data=gender, aes(x=value, y=as.factor(ST004D01T), fill=factor(after_stat(quantile)))) +\n  stat_density_ridges(geom=\"density_ridges_gradient\", \n                      calc_ecdf=TRUE,\n                      quantiles=4,\n                      quantile_lines=) +\n  scale_fill_viridis_d(name=\"Quartiles\", alpha=0.7) + \n  theme_ridges() + \n  \n  # Labelling axis and plot\n  ggtitle(\"Ridgeline Plot of Subject Scores By Gender\") + \n  xlab(\"PV5 Scores\") + \n  ylab(\"\") + \n  theme(axis.title.x=element_text(hjust=0.5, vjust=0.2)) + \n  \n  facet_wrap(~ name, ncol=1)\n\n\n\n\n\n\n\nTo ascertain our observations, tests for normality was first conducted on the distribution for each gender.\n\n\nCode\ngender %&gt;%\n  ggplot(aes(sample=value)) +\n  geom_qq() + geom_qq_line() + \n  facet_wrap(~name, scales=\"free_y\", nrow=1) +\n  labs(title=\"Normality Assumption Test\",\n       x=\"\", y=\"\") + \n  theme_bw() + \n  theme(axis.text.x=element_blank(), \n        axis.text.y=element_blank(), \n        panel.grid.major=element_blank(),\n        panel.grid.minor=element_blank(),\n        axis.ticks=element_blank())\n\n\n\n\n\nThe p-values computed are as shown in the table below.\n\n\nCode\nm &lt;- gender[gender$name==\"Mathematics\", ]\nad.test(m$value)\n\ns &lt;- gender[gender$name==\"Science\", ]\nad.test(s$value)\n\nr &lt;- gender[gender$name==\"Reading\", ]\nad.test(r$value)\n\n\n\n\n\n\nMathematics\nScience\nReading\n\n\n\n\np-value\n2.2e- 16\n2.2e- 16\n2.2e- 16\n\n\n\nSince all p-values are less than 0.05, the scores for all subjects do not follow a normal distribution across both genders. A non-parametric two-sample t-test will thus be used to compare the mean subject scores.\n\n\nThree Mann-Whitney U Tests, one for each subject, were used to compare the mean scores across genders, with the following hypothesis:\nH0: The mean subject score is the same for both genders.\nH1: The mean subject score is not the same for both genders.\nThe Mann-Whitney U Test was conducted using the ggbetweenstats() function from the ggstatsplot package.\n\n\nCode\nggplot() + \n  ggbetweenstats(data = gender[gender$name==\"Mathematics\", ],\n                 x = ST004D01T, y = value,\n                 type = \"np\",messages = FALSE, \n                 ylab=\"Mathematics Scores\", xlab=\"\") + \n   ggbetweenstats(data = gender[gender$name==\"Science\", ],\n                 x = ST004D01T, y = value,\n                 type = \"np\",messages = FALSE,\n                 ylab=\"Science Scores\", xlab=\"\") +\n  ggbetweenstats(data = gender[gender$name==\"Reading\", ],\n                 x = ST004D01T, y = value,\n                 type = \"np\",messages = FALSE,\n                 ylab=\"Reading Scores\", xlab=\"\") \n\n\n\n\n\nThe p-values for the three subjects are less than 0.05. There is thus sufficient evidence to reject H0 and conclude that the mean scores is significantly different for each gender across all subjects.\n\n\n\n\n\n\n\n\n\nInsights on Relationship between Gender and Performance\n\n\n\n\nFemales perform better than males in Reading, with a difference in median scores of 18.00.\nMales perform better than females in Mathematics and Science, with a difference in median scores of 16.45 and 11.96 respectively."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#relationship-between-socioeconomic-status-and-performance",
    "href": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#relationship-between-socioeconomic-status-and-performance",
    "title": "Is Every School a Good School?",
    "section": "4.3 Relationship between Socioeconomic Status and Performance",
    "text": "4.3 Relationship between Socioeconomic Status and Performance\nIn 2019, Mendaki researchers found a strong link between socio-economic statuses and grades in Singapore. Through cluster analysis, they found that pupils with higher scores tended to be of a relatively higher socio-economic status while those with indicators related to having a lower socio-economic platform tended to perform worse. More recently, researchers from the Singapore University of Social Science (SUSS) found increasing evidence of the link between lower socio-economic status and lower academic achievement. This may be attributed to parents from higher socio-economic status having more knowledge, resourcefulness and involvement with their child’s education journey. Parents with financial means are also better able to provide resources such as tuition to enhance their children’s learning and better provide them with a head-start in life.\nIn this section, we explore the relationship between socio-economic status and the performance of its students. Specifically, we ask if the socio-economic status affects the performance of students in terms of their performance in Mathematics, Science and Reading.\nPISA proxies the socioeconomic status of students using the PISA Index of Economic, Social and Cultural Status (ESCS). The ESCS is a composite score based on three indicators - highest parental occupation (HISEI), parental education (PARENDINT) and home possessions (HOMEPOS).\n\n4.3.1 Binning ESCS Values\nESCS is a continuous variable that ranges from -3.5488 to 2.3674. To reduce the complexity of the data and facilitate subsequent analysis, ESCS will be binned into 5 categories - Low, Mid-low, Mid, Mid-High and High using the cut() function from the dplyr package.\n\nincome &lt;- stu_sg[, c(\"PV5MATH\", \"PV5SCIE\", \"PV5READ\", \"ESCS\")] %&gt;%\n  mutate(Income=cut(ESCS, breaks=5, \n                          labels=c(\"Low\", \"Mid-low\", \"Mid\", \"Mid-high\", \"High\"),\n                          include.lowest=TRUE))\n\n\n\n4.3.2 Finding Overall Performance of Students\nStudents in Singapore take various national examinations at the end of certain education milestones to proceed to the next education level. These exams include the Primary School Leaving Examination, GCE N(T) Level, GCE N(A) Level, GCE O-Level and GCE A-Level. To ensure a holistic education, national examinations require at least one subject to be taken in each of the domains of Language, Science and Mathematics. In order to do well in such examinations, students in Singapore have to do well in all three domains. We will thus study how socio-economic status of students affect their overall performance across all three subjects instead of looking into subject-based performance.\nThe overall performance of students in the three subjects can be found by finding the mean level of proficiency.\n\n\nCode\n# Binning Science scores into proficiency levels\nincome &lt;- income %&gt;%\n  mutate(Science = case_when(\n    PV5SCIE &lt;= 409.54 ~ \"1\", \n    PV5SCIE &lt;= 484.14 ~ \"2\",\n    PV5SCIE &lt;= 558.73 ~ \"3\",\n    PV5SCIE &lt;= 633.33 ~ \"4\",\n    PV5SCIE &lt;= 707.93 ~ \"5\",\n    PV5SCIE &gt; 707.93 ~ \"6\",\n    TRUE ~ NA_character_\n  ))\n\n# Binning Mathematics scores into proficiency levels\nincome &lt;- income %&gt;%\n  mutate(Math = case_when(\n    PV5MATH &lt;= 420.07 ~ \"1\", \n    PV5MATH &lt;= 482.38 ~ \"2\",\n    PV5MATH &lt;= 544.68 ~ \"3\",\n    PV5MATH &lt;= 606.99 ~ \"4\",\n    PV5MATH &lt;= 669.30 ~ \"5\",\n    PV5MATH &gt; 669.30 ~ \"6\",\n    TRUE ~ NA_character_\n  ))\n\n# Binning Reading scores into proficiency levels\nincome &lt;- income %&gt;%\n  mutate(Read = case_when(\n    PV5READ &lt;= 407.47 ~ \"1\", \n    PV5READ &lt;= 480.18 ~ \"2\",\n    PV5READ &lt;= 552.89 ~ \"3\",\n    PV5READ &lt;= 625.61 ~ \"4\",\n    PV5READ &lt;= 698.32 ~ \"5\",\n    PV5READ &gt; 698.32 ~ \"6\",\n    TRUE ~ NA_character_\n  ))\n\n# Finding mean overall performance\nincome$Math &lt;- as.numeric(income$Math)\nincome$Science &lt;- as.numeric(income$Science)\nincome$Read &lt;- as.numeric(income$Read)\n\nincome$overall &lt;- rowMeans(income[, 6:8])\n\n\n\n\n4.3.3 Visualising Relationship between Socioeconomic Status and Performance\nStripcharts are one-dimensional scatter charts. By showing the overall performance of individual students in each socioeconomic group, we can get a clear idea of how students in one group performs compared to students in another group. This way, the relationship between socioeconomic status and performance can be inferred.\n\n\n\n\n\n\nDesign Considerations for Stripchart\n\n\n\n\nThe degree of jitter was lowered using the position argument in geom_jitter() to reduce the horizontal spacing between points in each income group for better visualisation of how the points are spread vertically. The vertical spread of the data is more important here as it shows how the overall performance varies within and across groups.\nThe transparency of points was lowered using the alpha argument in geom_jitter(). Since the points would tend to cluster, using a lower alpha value would enable visibility of points. It also creates a visual density, where higher proportion of overlaps produce darker colours.\nThe mean and standard deviation for each group was added using mean_sdl in the stat_summary() function. This allows the interquartile range to be easily seen.\n\n\n\n\nEDA PlotNormality TestANOVA\n\n\nBased on the stripchart, it appears that overall performance increases across income groups. Income group Low recorded the lowest performance while income group High recorded the highest performance\n\n\nCode\nggplot(income, aes(x=Income, y=overall, color=Income)) + \n  # Adjust degree of jitter in x-direction\n  geom_jitter(position=position_jitter(0.2), cex=1, alpha=0.25) +\n  # Adding mean and standard deviation\n  stat_summary(fun.data=\"mean_sdl\", mult=1, \n               geom=\"pointrange\", color=\"red\")\n\n\n\n\n\n\n\n\nincome %&gt;%\n  group_by(Income) %&gt;%\n  shapiro_test(overall) %&gt;% \n  kbl() %&gt;%\n  kable_styling(full_width=FALSE, bootstrap_options = \"responsive\")\n\n\n\n\n\nIncome\nvariable\nstatistic\np\n\n\n\n\nLow\noverall\n0.8776739\n0.0002052\n\n\nMid-low\noverall\n0.9502238\n0.0000000\n\n\nMid\noverall\n0.9763097\n0.0000000\n\n\nMid-high\noverall\n0.9628418\n0.0000000\n\n\nHigh\noverall\n0.9256653\n0.0611401\n\n\nNA\noverall\n0.9339609\n0.0105892\n\n\n\n\n\n\n\n\nSince the p-values of all income groups are less than 0.05, overall performance levels do not follow a normal distribution across all income groups. A non-parametric ANOVA test will thus be used to compare the mean overall performance levels.\n\n\nA non-parametric Kruskal-Wallis One-Way ANOVA test was used to compare the mean overall performance across income groups, with the following hypotheses:\nH0: The mean overall performance is the same for all income groups.\nH1: The mean overall performance is not the same for all income groups.\n\nggbetweenstats(\n  data=income,x=Income, y=overall,\n  type=\"nonparametric\",plot.type=\"box\",\n  pairwise.comparisons=TRUE, pairwise.display=\"significant\", \n  centrality.plotting=FALSE, bf.message=FALSE)\n\n\n\n\nThe p-values of the Kruskal-Wallis test and all pairwise tests are less than 0.05. There is thus sufficient evidence to reject H0 and conclude that the mean overall performance is significantly different for each income group.\n\n\n\n\n\n\n\n\n\nInsights of Relationship between Income and Overall Performance\n\n\n\n\nOverall performance across the three subjects are different for each income group, with the Low Income group performing the worst and the High Income group performing the best.\nOverall performance increases with income as evident from performance increasing the in the following order: Low Income, Mid-low Income, Mid Income, Mid-high Income and High Income."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#conclusion",
    "href": "Take_Home_Exercise/Take_Home_Ex01/Take_Home_Ex01.html#conclusion",
    "title": "Is Every School a Good School?",
    "section": "5. Conclusion",
    "text": "5. Conclusion\nIn this exercise, we used statistical plots to understand and analyse the performance of Singapore students in the PISA survey.\nIn Section 4, we explored the relationship between performance and schools, gender and socio-economic status. Statistical tests were also conducted to confirm the findings. The following findings were made:\n\nSchools affect how students in perform in all subjects, with Group 1 schools recording the best performance and Group 4 schools recording the worst performance.\nStudents with the lowest performance across all subjects are largely concentrated in the same schools. The same can be said about students with the highest performance across all subjects.\nFemales perform better than their male counterparts in Reading while males perform better than their female counterparts in Mathematics and Science.\nOverall performance increases with income levels, where students from lower-income families perform worse than their peers from higher-income families.\n\nWhile the analysis presented in this exercise is not exhaustive, it should provide some insights to Singapore’s education system and identified certain areas to work on so as to progress towards a more equitable system that will allow students from all backgrounds to excel."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex02/Take_Home_Ex02.html",
    "href": "Take_Home_Exercise/Take_Home_Ex02/Take_Home_Ex02.html",
    "title": "DataVis Makeover",
    "section": "",
    "text": "The original dataset was downloaded from the PISA 2022 Database, titled Student Questionnaire Data File. The file downloaded was cy08msp_stu_qqq.sas7bdat."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex02/Take_Home_Ex02.html#preliminary-steps",
    "href": "Take_Home_Exercise/Take_Home_Ex02/Take_Home_Ex02.html#preliminary-steps",
    "title": "DataVis Makeover",
    "section": "1. Preliminary Steps",
    "text": "1. Preliminary Steps\n\n1.1 Importing Relevant R Packages\n\npacman::p_load(haven, tidyverse, ggplot2, dplyr, readr, ggpubr,\nscales,forcats, gridExtra, corrplot, Hmisc, lubridate,knitr, kableExtra,patchwork)\n\n\n\n1.2 Preparing the Data\nAs instructed, the original data prepared by the peer should be left unchanged as much as possible unless there is value-add in supplementing the data. The data preparation steps taken by the student will thus be replicated, with adjustments made in later steps as needed.\n\n\nCode for importing data\nstu_qqq &lt;- read_sas(\"Data/cy08msp_stu_qqq.sas7bdat\")\nstu_sg &lt;- stu_qqq %&gt;% filter(CNT == \"SGP\")\nwrite_rds(stu_sg, \"Data/stu_SG.rds\")\n\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_sg.rds\")\n\n34 variables relating to the Student ID, School ID, gender of students, ESCS index of students, and subject performance across Mathematics, Science and Reading were extracted into a new table stu_qqq_SG_01.\n\n\nCode for extracting variables\nstu_qqq_SG_01 &lt;- stu_qqq_SG[, c(\"CNTSTUID\", \"CNTSCHID\", \"ST004D01T\", \"ESCS\",\n                             \"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\", \n                             \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\", \n                             \"PV1READ\", \"PV2READ\", \"PV3READ\", \"PV4READ\", \"PV5READ\", \n                             \"PV6READ\", \"PV7READ\", \"PV8READ\", \"PV9READ\", \"PV10READ\", \n                             \"PV1SCIE\", \"PV2SCIE\", \"PV3SCIE\", \"PV4SCIE\", \"PV5SCIE\", \n                             \"PV6SCIE\", \"PV7SCIE\", \"PV8SCIE\", \"PV9SCIE\", \"PV10SCIE\")]\n\nwrite_rds(stu_qqq_SG_01,\n          \"data/stu_qqq_SG_01.rds\")\n\n\nThe average Plausible Value (PV) was found for each subject. The overall performance for each student across the three subjects was also found by finding the average of the mean of the three subjects.\n\n\nCode for averaging PVs\nstu_qqq_SG_01 &lt;- stu_qqq_SG_01 %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    MeanMATH = mean(c(PV1MATH, PV2MATH, PV3MATH, PV4MATH, PV5MATH, \n                      PV6MATH, PV7MATH, PV8MATH, PV9MATH, PV10MATH), na.rm = TRUE),\n    MeanREAD = mean(c(PV1READ, PV2READ, PV3READ, PV4READ, PV5READ, \n                      PV6READ, PV7READ, PV8READ, PV9READ, PV10READ), na.rm = TRUE),\n    MeanSCIE = mean(c(PV1SCIE, PV2SCIE, PV3SCIE, PV4SCIE, PV5SCIE, \n                      PV6SCIE, PV7SCIE, PV8SCIE, PV9SCIE, PV10SCIE), na.rm = TRUE),\n    MeanOverall=mean(c(PV1MATH, PV2MATH, PV3MATH, PV4MATH, PV5MATH, \n                      PV6MATH, PV7MATH, PV8MATH, PV9MATH, PV10MATH,\n                      PV1READ, PV2READ, PV3READ, PV4READ, PV5READ, \n                      PV6READ, PV7READ, PV8READ, PV9READ, PV10READ,\n                      PV1SCIE, PV2SCIE, PV3SCIE, PV4SCIE, PV5SCIE, \n                      PV6SCIE, PV7SCIE, PV8SCIE, PV9SCIE, PV10SCIE), na.rm = TRUE)\n  ) %&gt;%\nungroup() %&gt;%\nselect(-matches(\"^PV\\\\d+MATH$\"), -matches(\"^PV\\\\d+READ$\"), \n       -matches(\"^PV\\\\d+SCIE$\"), MeanMATH, MeanREAD, MeanSCIE,MeanOverall)"
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex02/Take_Home_Ex02.html#data-visualisation-critique",
    "href": "Take_Home_Exercise/Take_Home_Ex02/Take_Home_Ex02.html#data-visualisation-critique",
    "title": "DataVis Makeover",
    "section": "2. Data Visualisation Critique",
    "text": "2. Data Visualisation Critique\nThe critique and improvements proposed will be based on clarity and aesthetics."
  },
  {
    "objectID": "Take_Home_Exercise/Take_Home_Ex02/Take_Home_Ex02.html#scatter-plot-of-score-against-meanoverall",
    "href": "Take_Home_Exercise/Take_Home_Ex02/Take_Home_Ex02.html#scatter-plot-of-score-against-meanoverall",
    "title": "DataVis Makeover",
    "section": "2.1 Scatter Plot of Score Against MeanOverall",
    "text": "2.1 Scatter Plot of Score Against MeanOverall\nIn the original scatterplot designed, the mean subject score of Math, Reading and Science was plotted against the mean overall subject score to visualise the relationship between the overall scores and individual subject scores as shown below.\n\n\nCode for original scatterplot\np2 &lt;- ggplot(stu_qqq_SG_01, aes(x = MeanOverall)) +\n  geom_point(aes(y = MeanMATH, color = \"Math\"), alpha = 0.5) +\n  geom_smooth(aes(y = MeanMATH, color = \"Math\"), method = 'lm') +\n  geom_point(aes(y = MeanREAD, color = \"Reading\"), alpha = 0.5) +\n  geom_smooth(aes(y = MeanREAD, color = \"Reading\"), method = 'lm') +\n  geom_point(aes(y = MeanSCIE, color = \"Science\"), alpha = 0.5) +\n  geom_smooth(aes(y = MeanSCIE, color = \"Science\"), method = 'lm') +\n  scale_color_manual(values = c(\"Math\" = \"salmon\", \"Reading\" = \"steelblue1\", \"Science\" = \"darkseagreen\"),\n                     name = \"Subject\", \n                     labels = c(\"Math\" = \"Math\", \"Reading\" = \"Reading\", \"Science\" = \"Science\")) +\n  theme_minimal() +\n  theme(legend.position = \"top\") +\n  labs(title = \"Relationship Between MeanOverall and Three Subjects\",\n       x = \"MeanOverall\", y = \"Score\")\n\np2\n\n\n\n\n\n\n2.1.1 Critique of Scatterplot\n\nClarityAesthetics\n\n\n\nThe choice of a scatterplot with trend lines was good for visualising the relationship between the overall performance and subject-specific performance.\nDue to the numerous records, the points are highly clustered together in the plot. Coupled with the relatively high opacity of the points (alpha=0.5), the middle region of the plot is obscured. The points for the different subjects cannot be diffentiated due to the high density of markers in the middle region. Further, the concentrated markers are covering the trend lines for all subjects. Important information may thus not be visible.\nThe title is descriptive but serves little purpose in explaining the visualisation. It does not tell the audience the context, such as the main highlight or story.\nThe axes title does not aid the audience in interpreting the graph as MeanOverall does not explain anything if there is no context provided on the data preparation steps.\nThere is no caption to present the source of the data.\n\n\n\n\nThe white background ensures the contrast between the background and the plot elements is obvious, making the plot stand out clearly.\nThe soft grid lines used ensure minimal distraction from the data.\nThe y-axis label is vertical, making it rather hard to read.\nThere are no tick marks, making it rather hard to read the axes especially since both axes are using a continuous scale.\n\n\n\n\n\n\n2.1.2 Proposed Improvements for Scatterplot\nOne of the main problems of the original visualisation is the highly cluttered points obscuring important information. In depicting the relationship between the individual subject scores and overall scores, the trend lines are the most salient and should draw the most attention. In contrast, the individual scores should remain in the background and only serve to supplement the trend line. To facilitate this, the trend line for each subject can be plotted using a darker shade compared to its corresponding subject marker. The subject score marker can be made more transparent by increasing alpha and its border can be made thinner using stroke so that the markers do not overwhelm the plot area. A sketch of the proposed changes is shown below.\n\n\n\nProposed Improvements\n\n\n\n\n2.1.3 Makeover of Scatterplot\n\n\n\n\n\n\nggplot2 Explanation\n\n\n\n\nThe transparency of the subject score markers was increased by setting alpha=0.1.\nThe border around the subject score markers was removed by setting stroke=NA.\n\n\n\n\nMakeover PlotCode\n\n\n\n\n\n\nggplot(data=stu_qqq_SG_01, aes(x=MeanOverall)) + \n  geom_point(aes(y = MeanMATH, color = \"Math\"), \n             # Increasing transparency of marker\n             alpha=0.05, \n             # Removing border around marker\n             stroke=NA) +\n  geom_point(aes(y=MeanSCIE, color=\"Science\"), alpha=0.05, stroke=NA) + \n  geom_point(aes(y=MeanREAD, color=\"Reading\"), alpha=0.05, stroke=NA) + \n  geom_smooth(aes(y = MeanMATH, color = \"Math\"), method = 'lm')"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex02/Hands_On_Ex02.html",
    "href": "Hands_On_Exercise/Hands_On_Ex02/Hands_On_Ex02.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "This chapter introduces several ggplot2 extensions for creating more elegant and effective statistical graphics. Specifically, the following will be explained:\n\nControlling the placement of annotation on a graph by using functions provided in ggrepel package,\nCreating professional publication quality figures by using functions provided in ggthemes and hrbrthemes packages, and\nPlotting composite figures by combining ggplot2 graphs using patchwork package."
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex02/Hands_On_Ex02.html#overview",
    "href": "Hands_On_Exercise/Hands_On_Ex02/Hands_On_Ex02.html#overview",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "This chapter introduces several ggplot2 extensions for creating more elegant and effective statistical graphics. Specifically, the following will be explained:\n\nControlling the placement of annotation on a graph by using functions provided in ggrepel package,\nCreating professional publication quality figures by using functions provided in ggthemes and hrbrthemes packages, and\nPlotting composite figures by combining ggplot2 graphs using patchwork package."
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex02/Hands_On_Ex02.html#getting-started",
    "href": "Hands_On_Exercise/Hands_On_Ex02/Hands_On_Ex02.html#getting-started",
    "title": "ISSS608-VAA",
    "section": "2.2 Getting Started",
    "text": "2.2 Getting Started\n\n2.2.1 Installing and loading required libraries\nFour R packages will be used: - ggrepel: provides geoms for ggplot2 to repel overlapping text labels - ggthemes: provides some extra themes, geoms and scales for ggplot2 - hrbrthemes: provides typography-centric themes and theme components for ggplot2 - patchwork: prepares composite figures creating using ggplot2\nThe code chunk below will be used to check if these packages have been installed and will load them onto the working R environment.\n\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)\n\n\n\n2.2.2 Importing data\nFor the purpose of this exercise, a data file called Exam_data will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in csv file format.\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package. readr is one of the tidyverse package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data tyle and the other three are in continuous data tyle. - The categorical attributes are: ID, CLASS, GENDER and RACE. - The continuous attributes are: MATHS, ENGLISH and SCIENCE.\n\n\n2.3 Beying ggplot2 Annotation: ggrepel\nOne of the challenge of plotting statistical graph is annotation, especially with large number of data points.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\nggrepel is an extension of ggplot2 package to provide geoms for ggplot2 to repel overlapping text as in out example above. We simply replace geom_text() with geom_text_repel() and geom_label() with geom_label_repel().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex02/Hands_On_Ex02.html#beyond-ggplot2-themes",
    "href": "Hands_On_Exercise/Hands_On_Ex02/Hands_On_Ex02.html#beyond-ggplot2-themes",
    "title": "ISSS608-VAA",
    "section": "2.4 Beyond ggplot2 Themes",
    "text": "2.4 Beyond ggplot2 Themes\nggplot2 comes with eight built-in themes, namely theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n2.4.1 Working with ggtheme Package\nggthemes provides ggplot2 themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, Stata, Excel and The Wall Street Journal, among others.\nIn the example below, The Economist theme was used.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n2.4.2 Working with hrbrthemes Package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\nThe second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used. Consult this vignette to learn more.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\nWhat can we learn from the code chunk above?\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18,\nbase_size argument is used to increase the default axis label to 15, and\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex02/Hands_On_Ex02.html#beyond-single-graph",
    "href": "Hands_On_Exercise/Hands_On_Ex02/Hands_On_Ex02.html#beyond-single-graph",
    "title": "ISSS608-VAA",
    "section": "2.5 Beyond Single Graph",
    "text": "2.5 Beyond Single Graph\nIt is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions with functions to compose figures with multiple graphs.\nFirst, three statistical graphics are created using the code chunk below.\n\nCode 1Plot 1Code 2Plot 2Code 3Plot 3\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\nprint(p1)\n\n\n\n\n\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n\nprint(p2)\n\n\n\n\n\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\nprint(p3)\n\n\n\n\n\n\n\n\n2.5.1 Creating Composite Graphics using patchwork\npatchwork is a ggplot2 extension specifically designed for combining separate ggplot2 graphs into a single figure.\nThe patchwork package has a simple syntax to create layouts easily. Here’s the general syntax that combines: - Two-Column Layout using the plus sign + - Subgroup Plot using parenthesis () - Two-Row Layout using division sign /\n\n\n2.5.2 Combining Two ggplot2 Graphs\nFigure in the tabset below shows a composite of two histograms created using patchwork. Note how simple the syntax used to create the plot!\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np1 + p2\n\n\n\n\n\n\n2.5.3 Combining Three ggplot2 Graphs\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator the define the sequence of the plotting.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\nTo learn more, refer to Plot Assembly.\n\n\n2.5.4 Creating Composite Figures with Tags\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n2.5.5 Creating Figure with Insert\nBeside providing functions to place plots next to each other based on the provided layout. With inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n\n\n\n\n\n2.5.6 Creating Composite Figure using patchwork and ggtheme\nFigure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex01/Hands_On_Ex01.html",
    "href": "Hands_On_Exercise/Hands_On_Ex01/Hands_On_Ex01.html",
    "title": "Hands-on-Exercise-1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are installed, they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"Data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex01/Hands_On_Ex01.html#getting-started",
    "href": "Hands_On_Exercise/Hands_On_Ex01/Hands_On_Ex01.html#getting-started",
    "title": "Hands-on-Exercise-1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are installed, they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"Data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex01/Hands_On_Ex01.html#using-ggplot2",
    "href": "Hands_On_Exercise/Hands_On_Ex01/Hands_On_Ex01.html#using-ggplot2",
    "title": "Hands-on-Exercise-1",
    "section": "Using ggplot2",
    "text": "Using ggplot2\n\ngeom_point for drawing individual points (e.g., scatter plot)\ngeom_line for drawing lines (e.g., line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., bar charts)\ngeom_histogram for drawing binned values (e.g., histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map by accessing the data to use using the map_data() function\n\nFor the complete list, please refer here.\n\nPlotting Bar Charts\nThe code chunk below plots a bar chart using geom_bar().\n\nggplot(exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\nPlotting Geometric Objects\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nggplot(exam_data, \n       aes(x=MATHS)) + \n  geom_dotplot(dotsize=0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nBe warned\n\n\n\nThe y-scale is rather misleading.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis\nbinwidth argument is used to change the binwidth to 2.5.\n\n\n\n\nggplot(exam_data,\n       aes(x=MATHS)) + \n  geom_dotplot(binwidth=2.5, \n               dotsize=0.5) + \n  scale_y_continuous(NULL, \n                     breaks=NULL)\n\n\n\n\n\n\nPlotting Histograms\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(exam_data, \n       aes(x=MATHS)) + \n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that the default bin is 30.\n\n\n\n\nModifying Plots by Changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue colour, and\ncolor argument is used to change the outline colour of the bars in black\n\n\nggplot(exam_data,\n       aes(x=MATHS)) + \n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill=\"light blue\")\n\n\n\n\n\n\nModifying Plots by Changing aes()\nThe code chunk below changes the fill of the histogram by using sub-group of aesthetic().\n\nggplot(exam_data,\n       aes(x=MATHS, \n           fill=GENDER)) + \n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis approach can be used to colour, fill and alpha of the geometric.\n\n\n\n\nPlotting Kernel Density Lines\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram. It is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nThe code below plots the distribution of Math scores in a kernel density estimate plot.\n\nggplot(exam_data, \n       aes(x=MATHS)) + \n  geom_density()\n\n\n\n\nThe code chunk below plots two kernel density lines by using color or fill arguments of aes().\n\nggplot(exam_data, \n       aes(x=MATHS,\n           color=GENDER)) + \n  geom_density()\n\n\n\n\n\n\nPlotting Boxplots\ngeom_boxplot() displays continuous value lists. It visualises five summary statistics (namely median, two hinges and two whiskers) and all individual outlying points.\nThe code chunk below plots boxplots using geom_boxplot().\n\nggplot(exam_data,\n       aes(y=MATHS,\n           x=GENDER)) + \n  geom_boxplot()\n\n\n\n\nNotches are used in boxplots to visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different. The code chunk below plots the distribution of Maths scores by gender in notched plots instead of boxplots.\n\nggplot(exam_data,\n       aes(y=MATHS,\n           x=GENDER)) + \n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\nPlotting Violin Plots\ngeom_violin() is designed for creating violin plots. Violin plots are used to compare multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions as the lines visually interfere with each other. With a violin plot, it is easier to compare several distributions as they are placed side by side.\nThe code below plots the distribution of Math scores by gender in a violin plot.\n\nggplot(exam_data,\n       aes(y=MATHS,\n           x=GENDER)) + \n  geom_violin()\n\n\n\n\n\n\nPlotting Scatterplots\ngeom_point() is especially useful for creating scatterplots. The code chunk below plots a scatterplot showing the Math and English grades of pupils using geom_point().\n\nggplot(exam_data,\n       aes(x=MATHS,\n           y=ENGLISH)) +\n  geom_point()\n\n\n\n\n\n\nCombining geom Objects\nThe code chunk below plots the data points on the boxplot by using both geom_boxplot() and geom_point().\n\nggplot(exam_data,\n       aes(y=MATHS,\n           x=GENDER)) + \n  geom_boxplot() + \n  geom_point(position=\"jitter\", \n             size=0.5)"
  },
  {
    "objectID": "Hands_On_Exercise/Hands_On_Ex01/Hands_On_Ex01.html#adding-summary-statistics-into-plots",
    "href": "Hands_On_Exercise/Hands_On_Ex01/Hands_On_Ex01.html#adding-summary-statistics-into-plots",
    "title": "Hands-on-Exercise-1",
    "section": "Adding Summary Statistics into Plots",
    "text": "Adding Summary Statistics into Plots\nThe Statistic functions statistically transform data, usually as some form of summary. For example:\n\nFrequency of values of a variable (bar graph)\n\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\nWorking with stat() - stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overrides the default geom.\n\nggplot(exam_data,\n       aes(y=MATHS, x=GENDER)) +\n  geom_boxplot() + \n  stat_summary(geom=\"point\", \n               fun.y=\"mean\", \n               color=\"red\", \n               size=4)\n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\n\nWorking with stat() - geom() method\nThe code chunk below adds mean values by using geom() function and overrides the default stat.\n\nggplot(exam_data,\n       aes(y=MATHS, \n           x=GENDER)) + \n  geom_boxplot() + \n  geom_point(stat=\"summary\", \n             fun.y=\"mean\", \n             color=\"red\", \n             size=4)\n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", color = \"red\", size =\n4): Ignoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`\n\n\n\n\n\n\n\nAdding a Best Fit Curve on Scatterplots\nThe interpretability of the scatterplot of English against Math grades of pupils can be improved by adding a best fit curve. In the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\nggplot(exam_data, \n       aes(x=MATHS,\n           y=ENGLISH)) + \n  geom_point() + \n  geom_smooth(size=0.5)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe default method used is loess."
  }
]